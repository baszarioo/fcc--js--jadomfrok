: Return a Value from a Functino with Return:
We can pass values into a funciton with arguemnts. You can use a return statemant to senda value back out of a function.::

function timesFive(num) {
	return num*5;
}
const answer = timesFive(3);

: Global Scope and Functions:

Using let or const, declare a global variable named myGlobal outside of any function. Initialize it with a value of 10.
Inside function fun1, assign 5 to oopsGlobal without using the var, let or const keywords.

const myGlobal=10;
function fun1() {
	oopsGlboal=5;
}
function fun2() {
	let output="";
	if(typeof myGloabl !="undefined"){
	output+="myGlobal: " + myGlobal;
	}
	if (typeof oopsGlobal != "undefined") {
	output += " oopsGlobal: " + oopsGlobal;
	}
	console.log(output);
}


Local Scope and Functions"

The editor has two console.log's to help you see what is happening. Check the console as you code to see how it changes. Declare a local variable myVar inside myLocalScope and run the tests.
Note: The console will still display ReferenceError: myVar is not defined, but this will not cause the tests to fail.

function myLocalScope(){
// Only change code below this line.
const myVar="hi"
console.log('inside myLocalScope', myVar);
}
myLocalScope();

console.log('outside myLocalScope', myVar);


Global vs. Local Scope in Functions:
-- Add a local variable to myOutfif function to override the value of outerWear with the string sweater.
//Setup:
const outerWear = "T-Shirt";
function myOutfif() {
	const outerWear="sweater"
	return outerWear;
}
myOutfit();


